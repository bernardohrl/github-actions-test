name: Env Variables

on: push

# env:
#   WF_ENV: ${{ secrets.WF_ENV }}       # The value is on settings > secrets 

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"


  # decrypt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone Repository
  #       uses: actions/checkout@v1

  #     - name: Show files
  #       run: |
  #         pwd
  #         ls -a
      
  #     - name: Decrypt File
  #       env:
  #         PASSPHRASE: ${{ secrets.PASSPHRASE }}
  #       run: gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output secret.json secret.json.gpg

  #     - name: Print File Content
  #       run: cat secret.json


  # push-random-file:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Push a random file
  #       run: |
  #         echo ${{github.repository}}
  #         pwd
  #         ls -a
  #         git init 
  #         git remote add origin 'https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}'
  #         git config --global user.email "bernardohrl.unb@gmail.com"
  #         git config --global user.name "Bernardo Henrique"
  #         git fetch
  #         git checkout main
  #         git branch --set-upstream-to=origin/main
  #         git pull
  #         ls -a
  #         echo $RANDOM >> random.txt
  #         ls -a
  #         git add -A
  #         git commit -m "Adds random file"
  #         git push

 
  # create_issue:
  #   runs-on: ubuntu-latest 
  #   permissions:
  #     issues: write 
  #   steps:
  #     - name: Create issue using REST API
  #       run: |
  #         curl --request POST \
  #         --url https://api.github.com/repos/${{ github.repository }}/issues \
  #         --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
  #         --header 'content-type: application/json' \
  #         --data '{
  #           "title": "Automated issue for commit: ${{ github.sha }}",
  #           "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
  #           }' \
  #         --fail

  # log-env:
  #   runs-on: ubuntu-latest
  #   env: 
  #     JOB_ENV: Avaiable only to this job
  #   steps:
  #     - name: Log Env Variables
  #       env:
  #         STEP_ENV: Available to just this step
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"

  #     - name: Log previous step variable
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"


# log-default-env:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Log default variables
#         run: |
#           echo "HOME: ${HOME}"
#           echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
#           echo "GITHUB_ACTION: ${GITHUB_ACTION}"
#           echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
#           echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
#           echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
#           echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
#           echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
#           echo "GITHUB_SHA: ${GITHUB_SHA}"
#           echo "GITHUB_REF: ${GITHUB_REF}"
#           echo "WF_ENV: ${WF_ENV}"
#           echo "JOB_ENV: ${JOB_ENV}"
#           echo "STEP_ENV: ${STEP_ENV}"
